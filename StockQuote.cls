//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class StockQuote {
	public GlobalQuote GlobalQuote {get;set;}

	public StockQuote(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'Global Quote') {
						GlobalQuote = new GlobalQuote(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'StockQuote consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}

	public class GlobalQuote {
			public String symbol {get;set;} // in json: 01. symbol
			public String open {get;set;} // in json: 02. open
			public String high {get;set;} // in json: 03. high
			public String low {get;set;} // in json: 04. low
			public String price {get;set;} // in json: 05. price
			public String volume {get;set;} // in json: 06. volume
			public String latesttradingday {get;set;} // in json: 07. latest trading day
			public String previousclose {get;set;} // in json: 08. previous close
			public String change {get;set;} // in json: 09. change
			public String changepercent {get;set;} // in json: 10. change percent

			public GlobalQuote(JSONParser parser) {
				while (parser.nextToken() != System.JSONToken.END_OBJECT) {
					if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == '01. symbol') {
							symbol = parser.getText();
						}
						else if (text == '02. open') {
							open = parser.getText();
						}
						else if (text == '03. high') {
							high = parser.getText();
						}
						else if (text == '04. low') {
							low = parser.getText();
						}
						else if (text == '05. price') {
							price = parser.getText();
						}
						else if (text == '06. volume') {
							volume = parser.getText();
						}
						else if (text == '07. latest trading day') {
							latesttradingday = parser.getText();
						}
						else if (text == '08. previous close') {
							previousclose = parser.getText();
						}
						else if (text == '09. change') {
							change = parser.getText();
						}
						else if (text == '10. change percent') {
							changepercent = parser.getText();
						}
						else {
							System.debug(LoggingLevel.WARN, 'Global Quote consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public static StockQuote parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new StockQuote(parser);
	}

	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT ||
			curr == System.JSONToken.START_ARRAY) {
				depth++;
			}
			else if (curr == System.JSONToken.END_OBJECT ||
			curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
}